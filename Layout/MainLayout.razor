@inherits LayoutComponentBase
@inject IAuthService AuthService
@inject NavigationManager Navigation

<div class="page">
    <div class="sidebar">
        <NavMenu />
    </div>

    <main>
        <div class="top-row px-4">
            <div class="d-flex justify-content-between align-items-center w-100">
                <h4 class="mb-0 text-primary">IbnelveApi</h4>
                <div class="user-info">
                    @if (isAuthenticated)
                    {
                        <span class="me-3 text-muted">@currentUser.Email</span>
                        <button class="btn btn-outline-danger btn-sm" @onclick="Logout">
                            <i class="fas fa-sign-out-alt me-1"></i>Sair
                        </button>
                    }
                    else
                    {
                        <a href="/login" class="btn btn-primary btn-sm">
                            <i class="fas fa-sign-in-alt me-1"></i>Entrar
                        </a>
                    }
                </div>
            </div>
        </div>

        <article class="content px-4">
            @Body
        </article>
    </main>
</div>

<div id="blazor-error-ui">
    Environment: <strong>@Environment.GetEnvironmentVariable("ASPNETCORE_ENVIRONMENT")</strong>
    <br />
    An unhandled error has occurred.
    <a href="" class="reload">Reload</a>
    <a class="dismiss">ðŸ—™</a>
</div>

@code {
    private bool isAuthenticated = false;
    private UserInfo currentUser = new();

    protected override async Task OnInitializedAsync()
    {
        isAuthenticated = await AuthService.IsAuthenticatedAsync();
        if (isAuthenticated)
        {
            currentUser = await AuthService.GetCurrentUserAsync();
        }
    }

    private async Task Logout()
    {
        await AuthService.LogoutAsync();
        Navigation.NavigateTo("/login");
    }
}